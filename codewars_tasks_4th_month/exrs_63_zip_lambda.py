"""
https://www.codewars.com/kata/5e16ffb7297fe00001114824
https://www.codewars.com/kata/570409d3d80ec699af001bf9
https://www.codewars.com/kata/558d5c71c68d1e86b000010f
"""


def top3(products, amounts, prices):
    total_amount = list(amount * price for amount, price in zip(amounts, prices))
    products_total_amt = sorted(list(zip(products, total_amount)), key=lambda x: x[1], reverse=True)
    return [product[0] for product in products_total_amt][:3]


print(top3(["Computer", "Cell Phones", "Vacuum Cleaner"], [3, 24, 8], [199, 299, 399]) == ["Cell Phones",
                                                                                           "Vacuum Cleaner",
                                                                                           "Computer"])
print(top3(["Cell Phones", "Vacuum Cleaner", "Computer", "Autos", "Gold", "Fishing Rods", "Lego", " Speakers"],
           [5, 25, 2, 7, 10, 3, 2, 24], [51, 225, 22, 47, 510, 83, 82, 124]) == ['Vacuum Cleaner', 'Gold', ' Speakers'])
print(top3(["Cell Phones", "Vacuum Cleaner", "Computer", "Autos", "Gold", "Fishing Rods", "Lego", " Speakers"],
           [0, 12, 24, 17, 19, 23, 120, 8], [9, 24, 29, 31, 51, 8, 120, 14]) == ['Lego', 'Gold', 'Computer'])


def fusc(num_input):
    f = [0, 1]
    for i in range(1, num_input + 1):
        f.append(f[i])
        f.append(f[i] + f[i + 1])
    return f[num_input]


vampire_nums = {1: 1260, 2: 1395, 3: 1435, 4: 1530, 5: 1827, 6: 2187, 7: 6880, 8: 102510, 9: 104260, 10: 105210, 11: 105264,
          12: 105750, 13: 108135, 14: 110758, 15: 115672, 16: 116725, 17: 117067, 18: 118440, 19: 120600, 20: 123354,
          21: 124483, 22: 125248, 23: 125433, 24: 125460, 25: 125500, 26: 126027, 27: 126846, 28: 129640, 29: 129775,
          30: 131242, 31: 132430, 32: 133245, 33: 134725, 34: 135828, 35: 135837, 36: 136525, 37: 136948, 38: 140350,
          39: 145314, 40: 146137, 41: 146952, 42: 150300, 43: 152608, 44: 152685, 45: 153436, 46: 156240, 47: 156289,
          48: 156915, 49: 162976, 50: 163944, 51: 172822, 52: 173250, 53: 174370, 54: 175329, 55: 180225, 56: 180297,
          57: 182250, 58: 182650, 59: 186624, 60: 190260, 61: 192150, 62: 193257, 63: 193945, 64: 197725, 65: 201852,
          66: 205785, 67: 211896, 68: 213466, 69: 215860, 70: 216733, 71: 217638, 72: 218488, 73: 226498, 74: 226872,
          75: 229648, 76: 233896, 77: 241564, 78: 245182, 79: 251896, 80: 253750, 81: 254740, 82: 260338, 83: 262984,
          84: 263074, 85: 284598, 86: 284760, 87: 286416, 88: 296320, 89: 304717, 90: 312475, 91: 312975, 92: 315594,
          93: 315900, 94: 319059, 95: 319536, 96: 326452, 97: 329346, 98: 329656, 99: 336550, 100: 336960, 101: 338296,
          102: 341653, 103: 346968, 104: 361989, 105: 362992, 106: 365638, 107: 368550, 108: 369189, 109: 371893,
          110: 378400, 111: 378418, 112: 378450, 113: 384912, 114: 386415, 115: 392566, 116: 404968, 117: 414895,
          118: 416650, 119: 416988, 120: 428980, 121: 429664, 122: 447916, 123: 456840, 124: 457600, 125: 458640,
          126: 475380, 127: 486720, 128: 489159, 129: 489955, 130: 498550, 131: 516879, 132: 529672, 133: 536539,
          134: 538650, 135: 559188, 136: 567648, 137: 568750, 138: 629680, 139: 638950, 140: 673920, 141: 679500,
          142: 729688, 143: 736695, 144: 738468, 145: 769792, 146: 789250, 147: 789525, 148: 792585, 149: 794088,
          150: 809919, 151: 809964, 152: 815958, 153: 829696, 154: 841995, 155: 939658}


def VampireNumber(num):
    return vampire_nums[num]
